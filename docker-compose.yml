services:
  redis:
    image: redis:alpine
    container_name: my_redis
    restart: always
    ports:
      - "6379:6379"
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6432:5432"
    environment:
      - POSTGRES_DB=chatApp
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      kafka-network:

  gateway:
    build: gateway
    image: gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      - authorization
    environment:
      - CHAT_APP_AUTHORIZATION=http://server:9090
    networks:
      kafka-network:

  authorization:
    build: authorization
    image: authorization
    container_name: authorization
    ports:
      - "9090:9090"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/chatApp
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password

  messenger:
    build: messenger
    image: messenger
    container_name: messenger
    ports:
      - "9080:9080"
    depends_on:
      - db
      - kafka
      - gateway
    environment:
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/chatApp
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      kafka-network:

networks:
  kafka-network: